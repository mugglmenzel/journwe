package models.adventure.group;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import models.adventure.IAdventureComponent;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

@DynamoDBTable(tableName = "journwe-group")
public class AdventurerGroup implements IAdventureComponent {

    private String adventureId;

    private String groupId;

    private String groupName;

    private String groupDescription;

    private Set<String> adventurerIds;

    private Set<String> routeIds;

    @DynamoDBHashKey
    public String getAdventureId() {
        return adventureId;
    }

    public void setAdventureId(String adventureId) {
        this.adventureId = adventureId;
    }

    @DynamoDBRangeKey
    @DynamoDBAutoGeneratedKey
    public String getGroupId() {
        return groupId;
    }

    public void setGroupId(String groupId) {
        this.groupId = groupId;
    }

    @DynamoDBAttribute
    public String getGroupName() {
        return groupName;
    }

    public void setGroupName(String groupName) {
        this.groupName = groupName;
    }

    @DynamoDBAttribute
    public String getGroupDescription() {
        return groupDescription;
    }

    public void setGroupDescription(String groupDescription) {
        this.groupDescription = groupDescription;
    }

    @DynamoDBAttribute
    public Set<String> getAdventurerIds() {
        return adventurerIds;
    }

    public void setAdventurerIds(Set<String> adventurerIds) {
        this.adventurerIds = adventurerIds;
    }

    @DynamoDBAttribute
    public Set<String> getRouteIds() {
        return routeIds;
    }

    public void setRouteIds(Set<String> routeIds) {
        this.routeIds = routeIds;
    }

    public boolean addAdventurerId(String s) {
        if(adventurerIds==null)
            adventurerIds= new HashSet<String>();
        return adventurerIds.add(s);
    }

    public boolean removeAdventurerId(String o) {
        if(adventurerIds==null)
            adventurerIds= new HashSet<String>();
        return adventurerIds.remove(o);
    }

    public boolean addRouteId(String s) {
        if(routeIds==null)
            routeIds = new HashSet<String>();
        return routeIds.add(s);
    }

    public boolean removeRouteId(Object o) {
        if(routeIds==null)
            routeIds = new HashSet<String>();
        return routeIds.remove(o);
    }
}
