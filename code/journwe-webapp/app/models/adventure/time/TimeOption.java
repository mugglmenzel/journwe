package models.adventure.time;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import models.adventure.IAdventureComponent;
import models.adventure.JournweCloneable;

import java.util.Date;

/**
 * Created with IntelliJ IDEA.
 * User: mugglmenzel
 * Date: 03.06.13
 * Time: 23:38
 * To change this template use File | Settings | File Templates.
 */
@DynamoDBTable(tableName = "journwe-timeoption")
public class TimeOption implements IAdventureComponent, Comparable<TimeOption> {

    private String adventureId;

    @JournweCloneable
    private String timeId;

    @JournweCloneable
    private Date startDate;

    @JournweCloneable
    private Date endDate;


    public static TimeOption fromId(String optionId) {
        TimeOption to = new TimeOption();
        to.setAdventureId(optionId.split(":")[0]);
        to.setTimeId(optionId.split(":")[1]);
        return to;
    }

    @DynamoDBIgnore
    public String getOptionId() {
        return adventureId + ":" + timeId;
    }

    @DynamoDBHashKey(attributeName = "adventureId")
    public String getAdventureId() {
        return adventureId;
    }

    public void setAdventureId(String adventureId) {
        this.adventureId = adventureId;
    }

    @DynamoDBRangeKey(attributeName = "timeId")
    @DynamoDBAutoGeneratedKey
    public String getTimeId() {
        return timeId;
    }

    public void setTimeId(String timeId) {
        this.timeId = timeId;
    }

    @DynamoDBAttribute
    public Date getStartDate() {
        return startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @DynamoDBAttribute
    public Date getEndDate() {
        return endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }
    
    @Override
    public boolean equals(Object compare){
        return getTimeId().equals(((TimeOption)compare).getTimeId());
    }

    @Override
    public int compareTo(TimeOption compare) {
 
        if (getStartDate().equals(compare.getStartDate())){
            return getEndDate().compareTo(compare.getEndDate());
        } else {
            return getStartDate().compareTo(compare.getStartDate());
        }
    }
}
