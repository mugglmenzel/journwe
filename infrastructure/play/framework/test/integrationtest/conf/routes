# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                       controllers.Application.index()
POST    /post                   controllers.Application.post()
POST    /submitForm             controllers.Application.submitForm()
GET     /form                   controllers.Application.form()
GET     /json_java              controllers.JavaApi.index()
GET     /headers                controllers.JavaApi.headers()
GET     /cookietest             controllers.JavaApi.cookietest()
GET     /cookie                 controllers.JavaApi.setCookie()
GET     /read/:name             controllers.JavaApi.readCookie(name)
GET     /clear/:name            controllers.JavaApi.clearCookie(name)

GET     /helloWorld 			controllers.Application.plainHelloWorld()

GET     /json_java_instance     @controllers.JavaControllerInstance.index()
GET     /json_scala_instance    @controllers.ScalaControllerInstance.index()

GET     /notintercepted         controllers.JavaApi.notIntercepted()
GET     /intercepted-with       controllers.JavaApi.interceptedUsingWith()
GET     /intercepted            controllers.JavaApi.intercepted()

GET     /json                   controllers.Application.json()
GET     /json_from_jsobject     controllers.Application.jsonFromJsObject()
GET     /jsonWithContentType    controllers.Application.jsonWithContentType()
GET     /jsonWithCharset        controllers.Application.jsonWithContentTypeAndCharset()
GET     /index_java_cache       controllers.Application.index_java_cache()
GET     /conf                   controllers.Application.conf()

GET     /promised               controllers.JavaApi.promised()
GET     /promisedInstance       @controllers.JavaControllerInstance.promised()

# Test that the regex is properly escaped in the generated code
GET     /escapes/$i<\d+>        controllers.Application.takeInt(i: Int)

GET     /take-bool              controllers.Application.takeBool(b: Boolean)
GET     /take-bool-2/:b         controllers.Application.takeBool2(b: Boolean)

GET     /take-list              controllers.Application.takeList(x: List[Int])
GET     /take-list-java         controllers.JavaApi.takeList(x: java.util.List[java.lang.Integer])

GET     /jsonp                  controllers.Application.jsonp(callback)
GET     /jsonp-java             controllers.JavaApi.jsonpJava(callback)

GET     /urlcoding/:d/*s        controllers.Application.urlcoding(d, s, q)

GET     /javascript-routes      controllers.Application.javascriptRoutes()
GET     /javascript-test        controllers.Application.javascriptTest(name)

GET     /accept                 controllers.Application.accept()
GET     /accept-java            controllers.JavaApi.accept()

GET     /content-negotiation    controllers.Application.contentNegotiation

GET     /onCloseSendFile/*fp    controllers.Application.onCloseSendFile(fp)

GET     /sync-error             controllers.Application.syncError()
GET     /async-error            controllers.Application.asyncError()

GET     /ident/:è27             controllers.πø$7ß.ôü65$t(è27: Int)

GET     /hello                  controllers.Application.hello()
GET     /setLang                controllers.Application.setLang(lang)

POST    /any-xml                controllers.Application.anyXml
POST    /xml                    controllers.Application.xml

->      /module                 module.Routes

GET     /routes                 controllers.Application.route(abstract)
GET     /routes                 controllers.Application.route(case)
GET     /routes                 controllers.Application.route(catch)
GET     /routes                 controllers.Application.route(class)
GET     /routes                 controllers.Application.route(def)
GET     /routes                 controllers.Application.route(do)
GET     /routes                 controllers.Application.route(else)
GET     /routes                 controllers.Application.route(extends)
GET     /routes                 controllers.Application.route(false)
GET     /routes                 controllers.Application.route(final)
GET     /routes                 controllers.Application.route(finally)
GET     /routes                 controllers.Application.route(for)
GET     /routes                 controllers.Application.route(forSome)
GET     /routes                 controllers.Application.route(if)
GET     /routes                 controllers.Application.route(implicit)
GET     /routes                 controllers.Application.route(import)
GET     /routes                 controllers.Application.route(lazy)
GET     /routes                 controllers.Application.route(match)
GET     /routes                 controllers.Application.route(new)
GET     /routes                 controllers.Application.route(null)
GET     /routes                 controllers.Application.route(object)
GET     /routes                 controllers.Application.route(override)
GET     /routes                 controllers.Application.route(package)
GET     /routes                 controllers.Application.route(private)
GET     /routes                 controllers.Application.route(protected)
GET     /routes                 controllers.Application.route(return)
GET     /routes                 controllers.Application.route(sealed)
GET     /routes                 controllers.Application.route(super)
GET     /routes                 controllers.Application.route(this)
GET     /routes                 controllers.Application.route(throw)
GET     /routes                 controllers.Application.route(trait)
GET     /routes                 controllers.Application.route(try)
GET     /routes                 controllers.Application.route(true)
GET     /routes                 controllers.Application.route(type)
GET     /routes                 controllers.Application.route(val)
GET     /routes                 controllers.Application.route(var)
GET     /routes                 controllers.Application.route(while)
GET     /routestest             controllers.Application.routetest(with)
GET     /routestest             controllers.Application.routetest(yield)

GET     /routes2                controllers.Application.route2(queryString)

# Map static resources from the /public folder to the /public path
GET     /public/*file           controllers.Assets.at(path="/public", file)

