#! /usr/bin/env sh

PRG="$0"
# resolve relative/absolute symlinks
while [ -h "$PRG" ] ; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG="`dirname "$PRG"`/$link"
  fi
done
dir=`dirname $PRG`

if [ -z "$JAVA_HOME" ]; then
  JAVA="java"
else
  JAVA="$JAVA_HOME/bin/java"
fi

if [ -z "$SBT_SCALA_VERSION" ]; then
  SBT_SCALA_VERSION="2.10.3"
fi

if [ -f conf/application.conf -o -f conf/reference.conf ] || [ -d project ]; then
  if test "$1" = "clean-all"; then
    rm -rf target
    rm -rf tmp
    rm -rf logs
    rm -rf dist
    rm -rf project/project
    rm -rf project/target
    if [ $# -ne 1 ]
    then  
     shift
    else
      echo "[info] Done!"
      exit 0
    fi
  fi
  if test "$1" = "stop"; then
    if [ -f RUNNING_PID ]; then
      echo "[info] Stopping application (with PID `cat RUNNING_PID`)..."
      kill `cat RUNNING_PID`

      RESULT=$?

      if test "$RESULT" = 0; then
        echo "[info] Done!"
        exit 0
      else
        echo "[\033[31merror\033[0m] Failed ($RESULT)"
        exit $RESULT
      fi
    else
      echo "[\033[31merror\033[0m] No RUNNING_PID file. Is this application running?"
      exit 1
    fi
  fi
  
  if test "$1" = "debug"; then
    JPDA_PORT="9999"
    shift      
  fi

  if [ -n "$1" ]; then
    JPDA_PORT="${JPDA_PORT}" SBT_SCALA_VERSION="${SBT_SCALA_VERSION}" $dir/framework/build "$@"
  else
    JPDA_PORT="${JPDA_PORT}" SBT_SCALA_VERSION="${SBT_SCALA_VERSION}" $dir/framework/build play
  fi
  
else
  SBT_SCALA_VERSION="${SBT_SCALA_VERSION}" "$JAVA" -Dplay.home=$dir/framework -Dsbt.boot.properties=$dir/framework/sbt/play.boot.properties -Dsbt.scala.version=${SBT_SCALA_VERSION} ${PLAY_OPTS} -jar $dir/framework/sbt/sbt-launch.jar "$@"
fi
